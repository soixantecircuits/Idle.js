{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 333ebf811965d110fb0c","webpack:///./src/idle.js"],"names":["bulkAddEventListener","object","events","callback","forEach","event","addEventListener","bulkRemoveEventListener","removeEventListener","IdleJs","options","defaults","idle","onIdle","onActive","onHide","onShow","keepTracking","startAtIdle","recurIdleCall","settings","visible","visibilityEvents","lastId","id","call","clearTimeout","timeout","timer","setInterval","setTimeout","bind","window","resetTimeout","document","hidden","webkitHidden","mozHidden","msHidden","module","exports"],"mappings":"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","file":"Idle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IdleJs\"] = factory();\n\telse\n\t\troot[\"IdleJs\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 333ebf811965d110fb0c","'use strict'\r\nvar bulkAddEventListener = function bulkAddEventListener (object, events, callback) {\r\n  events.forEach(function (event) {\r\n    object.addEventListener(event, function (event) {\r\n      callback(event)\r\n    })\r\n  })\r\n}\r\n\r\nvar bulkRemoveEventListener = function bulkRemoveEventListener (object, events) {\r\n  events.forEach(function (event) {\r\n    object.removeEventListener(event)\r\n  })\r\n}\r\n\r\nclass IdleJs {\r\n  constructor (options) {\r\n    this.defaults = {\r\n      idle: 10000, // idle time in ms\r\n      events: ['mousemove', 'keydown', 'mousedown', 'touchstart'], // events that will trigger the idle resetter\r\n      onIdle: function () {}, // callback function to be executed after idle time\r\n      onActive: function () {}, // callback function to be executed after back form idleness\r\n      onHide: function () {}, // callback function to be executed when window become hidden\r\n      onShow: function () {}, // callback function to be executed when window become visible\r\n      keepTracking: true, // set it to false of you want to track only once\r\n      startAtIdle: false, // set it to true if you want to start in the idle state\r\n      recurIdleCall: false\r\n    }\r\n    this.settings = Object.assign({}, this.defaults, options)\r\n    this.idle = this.settings.startAtIdle\r\n    this.visible = !this.settings.startAtIdle\r\n    this.visibilityEvents = ['visibilitychange', 'webkitvisibilitychange', 'mozvisibilitychange', 'msvisibilitychange']\r\n    this.lastId = null\r\n  }\r\n\r\n  resetTimeout (id, settings) {\r\n    if (this.idle) {\r\n      settings.onActive.call()\r\n      this.idle = false\r\n    }\r\n    clearTimeout(id)\r\n    if (this.settings.keepTracking) {\r\n      return this.timeout(this.settings)\r\n    }\r\n  }\r\n\r\n  timeout (settings) {\r\n    var timer = (this.settings.recurIdleCall) ? setInterval : setTimeout\r\n    var id\r\n    id = timer(function () {\r\n      this.idle = true\r\n      this.settings.onIdle.call()\r\n    }.bind(this), this.settings.idle)\r\n    return id\r\n  }\r\n\r\n  start () {\r\n    window.addEventListener('idle:stop', function (event) {\r\n      bulkRemoveEventListener(window, this.settings.events)\r\n      this.settings.keepTracking = false\r\n      this.resetTimeout(this.lastId, this.settings)\r\n    })\r\n    this.lastId = this.timeout(this.settings)\r\n    bulkAddEventListener(window, this.settings.events, function (event) {\r\n      this.lastId = this.resetTimeout(this.lastId, this.settings)\r\n    }.bind(this))\r\n    if (this.settings.onShow || this.settings.onHide) {\r\n      bulkAddEventListener(document, this.visibilityEvents, function (event) {\r\n        if (document.hidden || document.webkitHidden || document.mozHidden || document.msHidden) {\r\n          if (this.visible) {\r\n            this.visible = false\r\n            this.settings.onHide.call()\r\n          }\r\n        } else {\r\n          if (!this.visible) {\r\n            this.visible = true\r\n            this.settings.onShow.call()\r\n          }\r\n        }\r\n      }.bind(this))\r\n    }\r\n  }\r\n\r\n  stop() {\r\n\tbulkRemoveEventListener(window, this.settings.events)\r\n\tthis.settings.keepTracking = false\r\n\tthis.resetTimeout(this.lastId, this.settings)\r\n  }\r\n}\r\n\r\nmodule.exports = IdleJs\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/idle.js"],"sourceRoot":""}